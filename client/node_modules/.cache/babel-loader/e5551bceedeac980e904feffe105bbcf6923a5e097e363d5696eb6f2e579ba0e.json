{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Documents\\\\GitHub\\\\Gear\\\\client\\\\src\\\\components\\\\TeamChannelPreview.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamChannelPreview = ({\n  channel,\n  type\n}) => {\n  _s();\n  const {\n    channel: activeChannel,\n    client\n  } = useCharContext();\n  const ChannelPreview = () => {\n    var _channel$data, _channel$data2;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-preview__item\",\n      children: [\"#\", (channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name) || (channel === null || channel === void 0 ? void 0 : (_channel$data2 = channel.data) === null || _channel$data2 === void 0 ? void 0 : _channel$data2.id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  };\n  //To make sure we have the channel before we access anything else\n  //Or operation used here to see if the channel has the naame or not\n\n  const DirectPreview = () => {\n    var _member$, _member$$user, _member$2, _member$2$user, _members$, _members$$user;\n    //Aceessing each specific user the object\n    const members = Object.values(channel.state.members).filter(({\n      user\n    }) => user.id !== client.userID);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__item single\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar\n      //? is ternary operator for if comdition\n      // ? helps us to check if the user exists \n      , {\n        image: (_member$ = member[0]) === null || _member$ === void 0 ? void 0 : (_member$$user = _member$.user) === null || _member$$user === void 0 ? void 0 : _member$$user.image,\n        name: (_member$2 = member[0]) === null || _member$2 === void 0 ? void 0 : (_member$2$user = _member$2.user) === null || _member$2$user === void 0 ? void 0 : _member$2$user.fullName,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__wrapper__selected' : 'channel-preview__wrapper',\n    onClick: () => {\n      console.log(channel);\n    },\n    children: type === 'team' ? /*#__PURE__*/_jsxDEV(ChannelPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(DirectPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamChannelPreview, \"n7VNYdT5BylyZ2LhfK0JIudAVxQ=\", true);\n_c = TeamChannelPreview;\nexport default TeamChannelPreview;\nvar _c;\n$RefreshReg$(_c, \"TeamChannelPreview\");","map":{"version":3,"names":["React","Avatar","useChatContext","jsxDEV","_jsxDEV","TeamChannelPreview","channel","type","_s","activeChannel","client","useCharContext","ChannelPreview","_channel$data","_channel$data2","className","children","data","name","id","fileName","_jsxFileName","lineNumber","columnNumber","DirectPreview","_member$","_member$$user","_member$2","_member$2$user","_members$","_members$$user","members","Object","values","state","filter","user","userID","image","member","fullName","size","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Documents/GitHub/Gear/client/src/components/TeamChannelPreview.jsx"],"sourcesContent":["import React from 'react'\r\nimport {Avatar,useChatContext} from 'stream-chat-react';\r\n\r\nconst TeamChannelPreview = ({channel,type}) => {\r\n    const { channel:activeChannel,client} = useCharContext();\r\n     \r\n    const ChannelPreview = ( ) => (\r\n        <p className=\"channel-preview__item\">\r\n            \r\n            #{channel?.data?.name || channel?.data?.id}   \r\n        </p>\r\n    )\r\n    //To make sure we have the channel before we access anything else\r\n    //Or operation used here to see if the channel has the naame or not\r\n\r\n      const DirectPreview = () => {\r\n        //Aceessing each specific user the object\r\n        const members= Object.values(channel.state.members).filter(({user}) => user.id !== client.userID);\r\n      \r\n        return (\r\n            <div className=\"channel-preview__item single\">\r\n                <Avatar\r\n                //? is ternary operator for if comdition\r\n                // ? helps us to check if the user exists \r\n                image={member[0]?.user?.image}\r\n                name={member[0]?.user?.fullName}\r\n                size={24}\r\n                />\r\n                <p>{members [0]?.user?.fullName}</p>\r\n            </div>\r\n        )\r\n    }\r\n  return (\r\n    <div className= {\r\n        channel?.id === activeChannel ?.id \r\n         ? 'channel-preview__wrapper__selected'\r\n         :'channel-preview__wrapper'\r\n    }\r\n    onClick={() => {\r\n        console.log(channel);\r\n    }}\r\n    >\r\n    {type === 'team' ?<ChannelPreview/>:<DirectPreview/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamChannelPreview"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}